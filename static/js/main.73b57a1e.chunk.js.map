{"version":3,"sources":["components/Board.js","components/Square.js","App.js","index.js","components/Square.module.css","components/Board.module.css"],"names":["Board","props","className","styles","board","children","scoreBoard","Square","useState","isClicked","setIsClicked","useEffect","gameIsFinished","disabled","onClick","statusHandler","count","playerStatus","scoreHandler","checkWinner","square","value","x","y","hint","gameStatus","winningCondition","Players","App","Math","round","random","setPlayerStatus","setScoreBoard","playerStatusHandler","scoreBoardHandler","score","i","length","every","Fragment","map","type","ReactDOM","createRoot","document","getElementById","render","module","exports"],"mappings":"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","file":"static/js/main.73b57a1e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"./Board.module.css\";\r\nexport default function Board(props) {\r\n  return <div className={styles.board}>{props.children} </div>;\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport React from \"react\";\r\nimport styles from \"./Square.module.css\";\r\nlet scoreBoard = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\nexport default function Square(props) {\r\n  const [isClicked, setIsClicked] = useState(false);\r\n\r\n  function squareActionsHandler() {\r\n    if (!isClicked) {\r\n      setIsClicked(true);\r\n      if (!props.gameIsFinished) {\r\n        props.statusHandler();\r\n      }\r\n      scoreBoard[props.count] = props.playerStatus;\r\n      props.scoreHandler(scoreBoard);\r\n    }\r\n\r\n    props.checkWinner();\r\n  }\r\n  useEffect(() => {\r\n    if (props.gameIsFinished) {\r\n      scoreBoard = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\n      setIsClicked(false);\r\n    }\r\n  }, [props.gameIsFinished]);\r\n\r\n  return (\r\n    <button\r\n      disabled={props.gameIsFinished}\r\n      onClick={squareActionsHandler}\r\n      className={`${styles.square} ${\r\n        props.value === \"X\" ? styles.x : styles.y\r\n      }`}\r\n    >\r\n      {props.value}\r\n      {!isClicked && !props.gameIsFinished && (\r\n        <div className={styles.hint}>{props.playerStatus}</div>\r\n      )}\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Board from \"./components/Board\";\nimport Square from \"./components/Square\";\nimport { useState } from \"react\";\nconst winningCondition = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\nlet gameStatus;\nlet gameIsFinished = false;\nconst Players = [\"X\", \"O\"];\nfunction App() {\n  const [playerStatus, setPlayerStatus] = useState(\n    Players[Math.round(Math.random())]\n  );\n\n  const [scoreBoard, setScoreBoard] = useState([\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n  ]);\n\n  function playerStatusHandler() {\n    if (playerStatus === \"X\") {\n      setPlayerStatus(\"O\");\n    } else {\n      setPlayerStatus(\"X\");\n    }\n  }\n  function scoreBoardHandler(score) {\n    setScoreBoard(score);\n  }\n  function resetGame() {\n    setScoreBoard([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n    setPlayerStatus(Players[Math.round(Math.random())]);\n    gameIsFinished = false;\n  }\n\n  function checkWinner() {\n    for (let i = 0; i < winningCondition.length; i++) {\n      if (\n        scoreBoard[winningCondition[i][0]] ===\n          scoreBoard[winningCondition[i][1]] &&\n        scoreBoard[winningCondition[i][1]] ===\n          scoreBoard[winningCondition[i][2]] &&\n        scoreBoard[winningCondition[i][0]] !== \"\"\n      ) {\n        gameStatus = \"Player \" + playerStatus + \" won\";\n        gameIsFinished = true;\n      }\n    }\n  }\n\n  if (scoreBoard.every((score) => score !== \"\") && !gameIsFinished) {\n    gameStatus = \"Tie\";\n    gameIsFinished = true;\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"centered\">\n        {gameIsFinished ? (\n          gameIsFinished && <p className=\"game-status\">{gameStatus}</p>\n        ) : (\n          <p className=\"player-status\">Current player:{playerStatus}</p>\n        )}\n      </div>\n      <Board>\n        {scoreBoard.map((square, i) => {\n          return (\n            <Square\n              count={i}\n              value={square}\n              key={i}\n              statusHandler={playerStatusHandler}\n              scoreHandler={scoreBoardHandler}\n              playerStatus={playerStatus}\n              scoreBoard={scoreBoard}\n              gameIsFinished={gameIsFinished}\n              checkWinner={checkWinner}\n            />\n          );\n        })}\n      </Board>\n\n      {gameIsFinished && (\n        <div className=\"blurred-background\">\n          <button onClick={resetGame} type=\"button\" className=\"try-again\">\n            Try Again\n          </button>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"Square_square__27xWD\",\"x\":\"Square_x__3a2tO\",\"y\":\"Square_y__dKbj9\",\"hint\":\"Square_hint__1nSNj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__2ocuy\"};"],"sourceRoot":""}